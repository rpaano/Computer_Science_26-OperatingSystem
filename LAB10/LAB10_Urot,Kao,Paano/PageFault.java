import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;

public class PageFault extends javax.swing.JFrame {

    /**
     * Creates new form PageFault
     */
    public PageFault() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        input = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        output = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("Enter");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        input.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputActionPerformed(evt);
            }
        });
        input.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                inputKeyTyped(evt);
            }
        });

        output.setColumns(20);
        output.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        output.setRows(5);
        jScrollPane1.setViewportView(output);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2.setText("Reset");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton3.setText("Exit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Enter Number:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3)
                    .addComponent(jLabel1)
                    .addComponent(input, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(74, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(input, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(88, 88, 88)))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>                        

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        String max;
        max = input.getText();
        int num = Integer.parseInt(max);
        
        try {
            PageFaultGen(num);
        } catch (IOException ex) {
            Logger.getLogger(PageFault.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }                                        

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        input.setText("");
        output.setText("");
    }                                        

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        this.dispose();
    }                                        

    private void inputActionPerformed(java.awt.event.ActionEvent evt) {                                      
        // TODO add your handling code here:
    }                                     

    private void inputKeyTyped(java.awt.event.KeyEvent evt) {                               
        char NUM = evt.getKeyChar();
        
        if(!(Character.isDigit(NUM)) || (NUM == KeyEvent.VK_BACK_SPACE) || NUM == KeyEvent.VK_DELETE){
            evt.consume();
        }
    }                              

    public void PageFaultGen(int framenumber) throws IOException{
        
        String ALL_IN_ONE = null;
		int i1,highbit;
        try (Scanner sc = new Scanner(System.in)) {
            i1 = 0;
            highbit = 128;
        }
		//"C:/a/b/test.txt"
		 File file = new File("D:LAB10.txt");
		 if (file.createNewFile()){
		        System.out.println("File is created!");
                        ALL_IN_ONE = "File is created!\n";
		         }else{
		        System.out.println("File already exists.");
                        ALL_IN_ONE = "File already exists.\n";
		      }
                 int[] page;
                 int[] [] frame_faults;
                 int [][] memory;
        try (Scanner scan = new Scanner(file)) {
            page = new int[10000];
            frame_faults = new int[framenumber][2];
            //size of memory is 8.
            memory = new int[8][2];
            @SuppressWarnings("resource")
                    PrintWriter writer = new PrintWriter("D:LAB10.txt");
            //random generator of frame size. 
            for(int i=0;i<10000;i++){
                int k=(int)(Math.floor(Math.random()*framenumber));
//		    	numbers will be from frame to frame number
                   writer.println(k+1);
            }
            writer.close();
            while(scan.hasNextLine()){
                String s = scan.nextLine().trim();
                page[i1] = Integer.parseInt(s);
                i1++;
            }
        }
		     for(int i :page){
		    	 boolean stillnotfound = false,dobreak =false;
//		    	 check the page in memory reference .if found increase its value. else reduce its value.
//		   every input is one clk .
		    	 while(!stillnotfound){
		    	 for(int []m:memory){
		    		 if(m[0]==i){
//		    			page found increase the count and break.
		    			 m[1]=m[1]|highbit;
		    			 stillnotfound = false;
		    			 dobreak=true;
		    			 break;
		    		 }
		    	 }
		    	 stillnotfound=true;
		     }
		   if(stillnotfound == true && !dobreak){
//		    	found that memory doesnot have it 
//		    	 so shift all the memory values by one position right
		    	 for(int []m:memory){
		    		 m[1]= m[1]>>1;
		    	 }
//		    	 after shifting find the least value and replace with the value in memory
		    	 int lowest = 0;
		    	 for(int i11 = 0;i11<7;i11++){
		    		 if(memory[i11][1] > memory[i11+1][1]){
		    			 lowest = i11+1;
		    		 }
		    	 }
//		    	 assinging the value in to memory
		    	 memory[lowest][0]=i;
		    	 memory[lowest][1]=128;
//		    	 increasing the page fault
		    	 frame_faults[i-1][0]=i;
		    	 frame_faults[i-1][1]=frame_faults[i-1][1]+1;
		    	 }
		    
		   
		  }
		     
		     System.out.println("memory");
                      ALL_IN_ONE += "Memory\n";
		     for(int []h:memory){
		    	 System.out.println(h[0]+"\t"+h[1]);
                          ALL_IN_ONE += h[0] + "\t"+h[1] + "\n";
		     } 
		     
		     System.out.println("page faults");
                      ALL_IN_ONE += "Page Faults\n";
		     for(int []h:frame_faults){
		    	 if(h[0] >0){
		    	 System.out.println(h[0]+"    "+h[1]);
                         ALL_IN_ONE += h[0]+"\t"+h[1]  + "\n";
                                ALL_IN_ONE += h[0] + "\n";
		    		 System.out.println(h[0]);
		    	 }
		     }    
                     
                     System.out.println(ALL_IN_ONE);	
                     output.setText(ALL_IN_ONE);             
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PageFault.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PageFault.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PageFault.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PageFault.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PageFault().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JTextField input;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea output;
    // End of variables declaration                   
}
